name: Build

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    env:
      archive_name: talv
      executable_name: talv_ggez
    runs-on: ${{ matrix.os }}
    name: "Build ${{ matrix.target }}"

    steps:
      - uses: actions/checkout@v4

      - name: Install host target
        run: rustup target add ${{ matrix.target }}

      - name: Install musl-tools
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt-get install -y musl-tools

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create Archive Folder
        run: mkdir ${{ env.archive_name }}

      - name: Copy Unix Artifact
        if: ${{ matrix.os != 'windows-latest' }}
        run: cp target/${{ matrix.target }}/release/${{ env.executable_name }} ${{ env.archive_name }}

      - name: Copy Windows Artifact
        if: ${{ matrix.os == 'windows-latest' }}
        run: cp target/${{ matrix.target }}/release/${{ env.executable_name }}.exe ${{ env.archive_name }}

      - name: Create Tar Archive
        if: ${{ matrix.os != 'windows-latest' }}
        run: tar -czf ${{ env.archive_name }}.tgz ${{ env.archive_name }}

      - name: Create Zip Archive
        if: ${{ matrix.os == 'windows-latest' }}
        run: 7z a ${{ env.archive_name }}.zip ${{ env.archive_name }}

      - name: Upload Tar Archive
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ env.archive_name }}.zip
          if-no-files-found: error

      - name: Upload Zip Archive
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ env.archive_name }}.tgz
          if-no-files-found: error
